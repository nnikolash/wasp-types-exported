// Code generated by schema tool; DO NOT EDIT.

// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

package coreblob

import (
	"github.com/nnikolash/wasp-types-exported/packages/wasmvm/wasmlib/go/wasmlib"
	"github.com/nnikolash/wasp-types-exported/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"
)

type ImmutableStoreBlobResults struct {
	Proxy wasmtypes.Proxy
}

// calculated hash of blob chunks
func (s ImmutableStoreBlobResults) Hash() wasmtypes.ScImmutableHash {
	return wasmtypes.NewScImmutableHash(s.Proxy.Root(ResultHash))
}

type MutableStoreBlobResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableStoreBlobResults() MutableStoreBlobResults {
	return MutableStoreBlobResults{Proxy: wasmlib.NewResultsProxy()}
}

// calculated hash of blob chunks
func (s MutableStoreBlobResults) Hash() wasmtypes.ScMutableHash {
	return wasmtypes.NewScMutableHash(s.Proxy.Root(ResultHash))
}

type ImmutableGetBlobFieldResults struct {
	Proxy wasmtypes.Proxy
}

// data for named chunk
func (s ImmutableGetBlobFieldResults) Bytes() wasmtypes.ScImmutableBytes {
	return wasmtypes.NewScImmutableBytes(s.Proxy.Root(ResultBytes))
}

type MutableGetBlobFieldResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetBlobFieldResults() MutableGetBlobFieldResults {
	return MutableGetBlobFieldResults{Proxy: wasmlib.NewResultsProxy()}
}

// data for named chunk
func (s MutableGetBlobFieldResults) Bytes() wasmtypes.ScMutableBytes {
	return wasmtypes.NewScMutableBytes(s.Proxy.Root(ResultBytes))
}

type MapStringToImmutableInt32 struct {
	Proxy wasmtypes.Proxy
}

func (m MapStringToImmutableInt32) GetInt32(key string) wasmtypes.ScImmutableInt32 {
	return wasmtypes.NewScImmutableInt32(m.Proxy.Key(wasmtypes.StringToBytes(key)))
}

type ImmutableGetBlobInfoResults struct {
	Proxy wasmtypes.Proxy
}

// sizes for each named chunk
func (s ImmutableGetBlobInfoResults) BlobSizes() MapStringToImmutableInt32 {
	return MapStringToImmutableInt32(s)
}

type MapStringToMutableInt32 struct {
	Proxy wasmtypes.Proxy
}

func (m MapStringToMutableInt32) Clear() {
	m.Proxy.ClearMap()
}

func (m MapStringToMutableInt32) GetInt32(key string) wasmtypes.ScMutableInt32 {
	return wasmtypes.NewScMutableInt32(m.Proxy.Key(wasmtypes.StringToBytes(key)))
}

type MutableGetBlobInfoResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetBlobInfoResults() MutableGetBlobInfoResults {
	return MutableGetBlobInfoResults{Proxy: wasmlib.NewResultsProxy()}
}

// sizes for each named chunk
func (s MutableGetBlobInfoResults) BlobSizes() MapStringToMutableInt32 {
	return MapStringToMutableInt32(s)
}
